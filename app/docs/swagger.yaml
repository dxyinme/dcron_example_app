basePath: /api/v1
definitions:
  types.DB:
    properties:
      addr:
        type: string
      customerName:
        type: string
      databaseName:
        type: string
      dbType:
        type: string
      password:
        type: string
      user:
        type: string
    required:
    - addr
    - customerName
    - databaseName
    - dbType
    - password
    - user
    type: object
  types.DBReq:
    properties:
      addr:
        type: string
      databaseName:
        type: string
      dbType:
        type: string
      password:
        type: string
      user:
        type: string
    required:
    - addr
    - databaseName
    - dbType
    - password
    - user
    type: object
  types.RunSQLReq:
    properties:
      SQLStr:
        type: string
      dbCustomerName:
        type: string
    required:
    - SQLStr
    - dbCustomerName
    type: object
  types.Task:
    properties:
      SQLStr:
        type: string
      cronStr:
        type: string
      dbName:
        type: string
      name:
        type: string
    required:
    - SQLStr
    - cronStr
    - dbName
    type: object
  types.TaskReq:
    properties:
      SQLStr:
        type: string
      cronStr:
        type: string
      dbName:
        type: string
    required:
    - SQLStr
    - cronStr
    - dbName
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
info:
  contact: {}
  termsOfService: http://swagger.io/terms/
  title: APP
  version: "0.1"
paths:
  /databases:
    get:
      consumes:
      - application/json
      description: list database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.DB'
            type: array
      summary: list Database
      tags:
      - db
  /databases/{dbName}:
    delete:
      consumes:
      - application/json
      description: db Remove
      parameters:
      - description: database customer name
        in: path
        name: dbName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: db Remove
      tags:
      - db
    get:
      consumes:
      - application/json
      description: db Get
      parameters:
      - description: database customer name
        in: path
        name: dbName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.DB'
      summary: db Get
      tags:
      - db
    put:
      consumes:
      - application/json
      description: db CreateOrUpdate
      parameters:
      - description: database customer name
        in: path
        name: dbName
        required: true
        type: string
      - description: database CreateOrUpdate request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.DBReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: db CreateOrUpdate
      tags:
      - db
  /execute/runSQL:
    post:
      consumes:
      - application/json
      description: execute sql cmd
      parameters:
      - description: Run SQL request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.RunSQLReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: execute sql cmd
      tags:
      - execute
  /tasks:
    get:
      consumes:
      - application/json
      description: list cron tasks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Task'
            type: array
      summary: list tasks
      tags:
      - task
  /tasks/{taskName}:
    delete:
      consumes:
      - application/json
      description: remove cron task by task name
      parameters:
      - description: cron task name
        in: path
        name: taskName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: remove task
      tags:
      - task
    get:
      consumes:
      - application/json
      description: task Get
      parameters:
      - description: task name
        in: path
        name: taskName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Task'
      summary: task Get
      tags:
      - task
    put:
      consumes:
      - application/json
      description: create or update cron task
      parameters:
      - description: cron task name
        in: path
        name: taskName
        required: true
        type: string
      - description: create or update cron task request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.TaskReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: create or update task
      tags:
      - task
swagger: "2.0"
